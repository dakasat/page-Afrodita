/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@s-circle-name: 's-circle';
@s-circle-x: 84px;
@s-circle-y: 42px;
@s-circle-offset-x: -84px;
@s-circle-offset-y: -42px;
@s-circle-width: 17px;
@s-circle-height: 17px;
@s-circle-total-width: 122px;
@s-circle-total-height: 80px;
@s-circle-image: '../img/sprite-06354280370862408.png';
@s-circle: 84px 42px -84px -42px 17px 17px 122px 80px '../img/sprite-06354280370862408.png' 's-circle';
@s-dribbble-name: 's-dribbble';
@s-dribbble-x: 0px;
@s-dribbble-y: 0px;
@s-dribbble-offset-x: 0px;
@s-dribbble-offset-y: 0px;
@s-dribbble-width: 38px;
@s-dribbble-height: 38px;
@s-dribbble-total-width: 122px;
@s-dribbble-total-height: 80px;
@s-dribbble-image: '../img/sprite-06354280370862408.png';
@s-dribbble: 0px 0px 0px 0px 38px 38px 122px 80px '../img/sprite-06354280370862408.png' 's-dribbble';
@s-facebook-name: 's-facebook';
@s-facebook-x: 42px;
@s-facebook-y: 0px;
@s-facebook-offset-x: -42px;
@s-facebook-offset-y: 0px;
@s-facebook-width: 38px;
@s-facebook-height: 38px;
@s-facebook-total-width: 122px;
@s-facebook-total-height: 80px;
@s-facebook-image: '../img/sprite-06354280370862408.png';
@s-facebook: 42px 0px -42px 0px 38px 38px 122px 80px '../img/sprite-06354280370862408.png' 's-facebook';
@s-instagram-name: 's-instagram';
@s-instagram-x: 0px;
@s-instagram-y: 42px;
@s-instagram-offset-x: 0px;
@s-instagram-offset-y: -42px;
@s-instagram-width: 38px;
@s-instagram-height: 38px;
@s-instagram-total-width: 122px;
@s-instagram-total-height: 80px;
@s-instagram-image: '../img/sprite-06354280370862408.png';
@s-instagram: 0px 42px 0px -42px 38px 38px 122px 80px '../img/sprite-06354280370862408.png' 's-instagram';
@s-twitter-name: 's-twitter';
@s-twitter-x: 42px;
@s-twitter-y: 42px;
@s-twitter-offset-x: -42px;
@s-twitter-offset-y: -42px;
@s-twitter-width: 38px;
@s-twitter-height: 38px;
@s-twitter-total-width: 122px;
@s-twitter-total-height: 80px;
@s-twitter-image: '../img/sprite-06354280370862408.png';
@s-twitter: 42px 42px -42px -42px 38px 38px 122px 80px '../img/sprite-06354280370862408.png' 's-twitter';
@s-youtube-name: 's-youtube';
@s-youtube-x: 84px;
@s-youtube-y: 0px;
@s-youtube-offset-x: -84px;
@s-youtube-offset-y: 0px;
@s-youtube-width: 38px;
@s-youtube-height: 38px;
@s-youtube-total-width: 122px;
@s-youtube-total-height: 80px;
@s-youtube-image: '../img/sprite-06354280370862408.png';
@s-youtube: 84px 0px -84px 0px 38px 38px 122px 80px '../img/sprite-06354280370862408.png' 's-youtube';
@spritesheet-width: 122px;
@spritesheet-height: 80px;
@spritesheet-image: '../img/sprite-06354280370862408.png';
@spritesheet-sprites: @s-circle @s-dribbble @s-facebook @s-instagram @s-twitter @s-youtube;
@spritesheet: 122px 80px '../img/sprite-06354280370862408.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
